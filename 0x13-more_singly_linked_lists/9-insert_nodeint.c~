#include <stdlib.h>
#include <string.h>
#include <stdio.h>
#include "lists.h"

/**
 * insert_nodeint_at_index - inserts a new node at a given position
 * @head: a pointer to the pointer to the head node of the list
 * @idx: index of the list where the new node should be added
 * @n: value to be stored in the new node
 * Return: the address of the new node, or NULL if it failed
 */

listint_t *insert_nodeint_at_index(listint_t **head, unsigned int idx, int n)
{
  listint_t *new_node, *temp;
  unsigned int count;

  if (head == NULL || idx > size_listint(*head))
    return (NULL);

  new_node = malloc(sizeof(listint_t));
  if (new_node == NULL)
    return (NULL);

  new_node->n = n;
  new_node->next = NULL;

  if (*head == NULL || idx == 0)
    {
      new_node->next = *head;
      *head = new_node;
      return (new_node);
    }

  temp = *head;
  count = 0;
  while (temp != NULL && count < idx - 1)
    {
      temp = temp->next;
      count++;
    }

  new_node->next = temp->next;
  temp->next = new_node;
  return (new_node);
}
